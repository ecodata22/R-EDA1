shiny::runApp('C:/Users/user/OneDrive/ドキュメント/R-EDA1')
runApp('C:/Users/user/OneDrive/ドキュメント/R-EDA1')
Data <- iris
Data
plot(Data)
setwd("C:/Rtest") # 作業用ディレクトリを変更
Data1 <- read.csv("Data1.csv", header=T) # データを読み込み
setwd("C:/Rtest") # 作業用ディレクトリを変更
Data1 <- read.csv("Data.csv", header=T) # データを読み込み
Data10 <- Data1[,1:2]## クラスター分析に使うデータを指定。ここでは1～2列目の場合
Data11 <- Data10 # 出力先の行列を作る
library(mclust) # ライブラリを読み込み
mc <- Mclust(Data11,4) # 混合分布で分類。これは3個のグループ分けの場合
output <- mc$classification # 分
library(ggplot2) # パッケージの読み込み
Data <- cbind(Data1, output)　 # 最初のデータセットにグループ分けの結果を付ける
Data$output <-factor(Data$output) # グループの変数を文字列型にする
Data$Index <-row.names(Data) # Indexという名前の列を作り、中身は行番号にする
ggplot(Data, aes(x=X1, y=X2)) + geom_point(aes(colour=output))#
library(ggplot2) # パッケージの読み込み
Data <- cbind(Data1, output)　 # 最初のデータセットにグループ分けの結果を付ける
Data$output <-factor(Data$output) # グループの変数を文字列型にする
Data$Index <-row.names(Data) # Indexという名前の列を作り、中身は行番号にする
ggplot(Data, aes(x=X01, y=X02)) + geom_point(aes(colour=output))#
Data
setwd("C:/Rtest") # 作業用ディレクトリを変更
Data10 <- read.csv("Data.csv", header=T) # データを読み込み
Data11 <- (Data10 - apply(Data10,2,min))/(apply(Data10,2,max)-apply(Data10,2,min))# すべての変数のデータを、0から1の間のデータにする。
# クラスター分析をします。
library(dbscan) # ライブラリを読み込み
dbs <- dbscan(Data11, eps = 0.2) # DBSCANで分類。epsは、コア点からの距離の範囲です。ここでは、0.2にしました。
output <- dbs$cluster # 分類結果の抽出
Data <- cbind(Data10, output)　 # 最初のデータセットにグループ分けの結果を付ける
Data$output <-factor(Data$output) # グループの変数を文字列型にする
# 決定木をrpartにする場合です。
library(partykit) # ライブラリを読み込み
library(rpart) # ライブラリを読み込み
treeModel <- rpart(output ~ ., data = Data)# rpartを実行
plot(as.party(treeModel)) # グラフにする。
shiny::runApp('C:/Users/user/OneDrive/ドキュメント/R-EDA1')
